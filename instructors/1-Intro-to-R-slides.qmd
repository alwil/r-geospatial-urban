---
title: "Introduction to R"
author:
  - "Aleksandra Wilczynska"
  - "Javier San Mill√°n Tejedor"
format:
  revealjs:
    footer: "Geospatial Data Carpentry for Urbanism"
    chalkboard: true
    incremental: true
    theme: [default, custom.scss]
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(here)

gapminder <- read.csv(here('episodes/data','gapminder_data.csv') )

knitr::opts_chunk$set(
  cache = FALSE,
  echo = TRUE,
  message = FALSE,
  warning = FALSE)
  
```


## RStudio

- RStudio is an integrated development environment (IDE)
- It provides a (much prettier) interface for the R software
- R is integrated into RStudio, so you never have to open R...
- With RStudio you can create a self-contained working space) (i.e. projects).

## Organising working directory

-   `data/` - your raw data. **READ ONLY**
-   `data_output/` - your data output **READ AND WRITE**
-   `documents/` - the documentation associated with the project (e.g. cookbook)
-   `fig_output/` - your figure outputs **WRITE ONLY**
-   `scripts/` - your code **READ AND WRITE**


## Handling paths
  ![*Source*: [kaggle.com](https://www.kaggle.com/code/rtatman/reproducibility-tips-absolute-vs-relative-paths/notebook)](fig/relative_root.png){fig-align="center" width="65%"}

## `here` package
![*Source*: [Allison Horst](https://github.com/allisonhorst)](fig/here.png){fig-align="center" width="65%"}


## Your turn!

Combine the `abcd_vector` with the `numeric_vector`. 
What is the data type of this new vector, and why?

```{r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 3)
```

. . .

```{r}
numeric_vector <- c(2, 6, 3) 
abcd_vector <- c("a", "b", "c", "d")

combined_vector <- c(abcd_vector, numeric_vector)
combined_vector
str(combined_vector)

```

## Exploring data frames

A data frame is the representation of data in the format of a **table** where the columns are **vectors** that all have the **same length**.

![](fig/data-frame.svg){fig-align="center"}

## Your turn! 

Write a single command (you can use pipes) that will produce a **data frame** that has values only for **Eurasia**. Include variables:

::: {.nonincremental}
- **life expectancy**
- **country**
- **year**
:::

How many rows does your data frame have and why?

```{r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 3)
```

. . .

```{r}
year_country_lifeExp_eurasia <- gapminder %>%
  filter(continent=="Europe" | continent == "Asia"  ) %>%
  select(year,country,lifeExp)

nrow(year_country_lifeExp_eurasia)

```


## Your turn! 

Calculate the **average life expectancy per country**. Which country has the **longest** average life expectancy and which has the **shortest** average life expectancy?


**Hint:** Use `max()`  and `min()` functions to find minimum and maximum.

```{r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 3)
```

. . .

```{r}

gapminder %>%
  group_by(country) %>%
  summarize(avg_lifeExp = mean(lifeExp) ) %>%
  filter(avg_lifeExp == min(avg_lifeExp) | avg_lifeExp == max(avg_lifeExp))

```



## Introduction to visualisation

![*Credit*: [Allison Horst](https://github.com/allisonhorst)](fig/ggplot2_masterpiece.png){width="65%"}


## `ggplot2` package

`gg` stands for *grammar of graphics*, the idea that three components needed to create a graph are:

  - **data**
  - **aesthetics** - coordinate system on which we map the data ( what is represented on x axis, what on y axis)
  - **geometries** - visual representation of the data (points, bars, etc.)
